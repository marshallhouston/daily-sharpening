require 'project_euler/fibonacci_summer'
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms

describe FibonacciSummer do
  describe '.class_methods' do
    describe '.even_sum(max_number)' do
      it 'finds the sum of all even numbers in the Fibonacci sequence below a specific number' do
        # 1, 2, 3, 5, 8, 13 => 2 + 8 = 10
        expect(FibonacciSummer.even_sum(20)).to eq 10

        # 1, 2, 3, 5, 8, 13, 21, 34 => 2 + 8 + 34 = 44
        expect(FibonacciSummer.even_sum(50)).to eq 44

        # 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144 => 2 + 8 + 34 + 144
        expect(FibonacciSummer.even_sum(170)).to eq 188

        expect(FibonacciSummer.even_sum(4_000_000)).to eq 4_613_732
      end
    end
  end
end
